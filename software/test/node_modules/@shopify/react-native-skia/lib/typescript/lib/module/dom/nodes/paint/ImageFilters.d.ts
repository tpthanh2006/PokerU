export class ImageFilterDeclaration extends JsiDeclarationNode {
    input(ctx: any): any;
    composeAndPush(ctx: any, imgf1: any): void;
}
export class OffsetImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
export class DisplacementMapImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
export class BlurImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
export class DropShadowImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
export let MorphologyOperator: {};
export class MorphologyImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
export class BlendImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
export class RuntimeShaderImageFilterNode extends ImageFilterDeclaration {
    constructor(ctx: any, props: any);
    decorate(ctx: any): void;
}
import { JsiDeclarationNode } from "../Node";
